<?php
/*
 * Command line tools for OnMyShelf
 */

class Cmd
{
    /**
     * Cleanup database
     * @return void
     */
    public static function cleanup()
    {
        echo "Cleanup expired tokens...";
        (new Database())->cleanupTokens();
        echo "\nCleanup finished.\n";
    }


    /**
     * Install OnMyShelf
     * @return void
     */
    public static function install()
    {
        // test database connection
        try {
            $db = new Database();
        } catch (Throwable $t) {
            echo "ERROR: cannot connect to database!";
            exit(1);
        }

        // get current version
        try {
            $version = $db->getConfig('version');
        } catch (Throwable $t) {
            // if failed, then probably the database is empty
            $version = false;
        }

        if (!$version) {
            echo "Initialize database...";
            // WARN: we need to create a separate connection here
            if (!(new Database())->install()) {
                echo " FAILED! (see log file for more details)\n";
                exit(1);
            }

            // create default user
            if ($db->countUsers() == 0) {
                echo "\nCreate default user...";
                if (!$db->createUser('onmyshelf', 'onmyshelf')) {
                    echo " FAILED! (see log file for more details)\n";
                    exit(1);
                }
            }
        }

        echo "\nOnMyShelf is ready!\n";
    }


    /**
     * Upgrade OnMyShelf
     * @return void
     */
    public static function upgrade()
    {
        // get current version
        $currentVersion = Config::get('version');

        if (!$currentVersion) {
            echo "ERROR: cannot get current version!";
            exit(1);
        }

        $newVersion = preg_replace('/\+.*/', '', VERSION);

        // run upgrade
        if (Config::compareVersions(VERSION, $currentVersion)) {
            echo "Upgrading from $currentVersion to $newVersion...";

            // upgrade version (without build number)
            if ((new Database())->upgrade($newVersion)) {
                echo "\nUpgrade finished\n";
            } else {
                echo " FAILED! (see log file for more details)\n";
                exit(1);
            }
        } else {
            echo "OnMyShelf is already up-to-date\n";
        }
    }


    /**
     * Print help
     * @return void
     */
    public static function help($command=null)
    {
        if ($command) {
            $cmd = $command;
        } else {
            $cmd = 'COMMAND';
        }

        echo "Usage: php bin/oms $cmd\n";

        if (is_null($command)) {
            echo "\nAvailable commands:\n";
            foreach (get_class_methods('Cmd') as $f) {
                echo "   $f\n";
            }
        }

        echo "\n";

        switch ($command) {
            case 'cleanup':
                echo "Cleanup database and files";
                break;

            case 'install':
                echo "Installs OnMyShelf";
                break;

            case 'upgrade':
                echo "Upgrades OnMyShelf to the last version";
                break;

            case '':
                break;

            default:
                echo "Command '$command' does not exists.\n";
                echo "Type 'oms help' to see available commands.";
                break;
        }
    }
}

if (count($argv) < 2) {
    Cmd::help();
    exit(1);
}

if (!method_exists('Cmd', $argv[1])) {
    echo "ERROR: command not found\n";
    Cmd::help();
    exit(1);
}

require_once('inc/init.php');

// give admin privileges
$GLOBALS['accessRights'] = 4;
$GLOBALS['currentUserID'] = 1;

// calls help
if (isset($argv[2]) && $argv[2] == '--help') {
    Cmd::help($argv[1]);
    exit();
}

// call function
// TODO: call with arguments
call_user_func(['Cmd', $argv[1]]);
